id: text-generation-webui
title: "GPT4All"
version: 1.1.1.0
# Release notes for the update - can be a string, paragraph or URL
release-notes: "TODO"
license: MIT/A-GPL/RAIL-M
wrapper-repo: "https://github.com/samsartor/text-generation-webui-wrapper"
upstream-repo: "https://github.com/oobabooga/text-generation-webui"
support-site: "https://github.com/oobabooga/text-generation-webui/tree/main/docs"
marketing-site: "https://gpt4all.io"
build: ["make"]
description:
  short: An AI assistant.
  long: |
    TODO
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
main:
  type: docker
  image: main
  entrypoint: "docker_entrypoint.sh"
  args: []
  mounts:
    main: /data
    default-models: /mnt/default-models
    filebrowser: /mnt/files
  # Allow GPU acess via /dev/dri
  gpu-acceleration: true
health-checks:
  webui:
    name: WebUI
    success-message: Ready to visit Stable Diffusion in a web browser
    type: script
  memory:
    name: Memory Usage
    success-message: System has enough memory
    type: docker
    image: main
    system: false
    entrypoint: check-mem.py
    args: []
    mounts: {}
    io-format: yaml
    inject: true
config: ~
properties: ~
volumes:
  main:
    type: data
  default-models:
    type: assets
  filebrowser:
    package-id: "filebrowser"
    path: /data/gpt4all
    readonly: false
    type: pointer
    volume-id: main
interfaces:
  main:
    name: User Interface
    description: A browser interface based on Gradio library for Stable Diffusion.
    tor-config:
    # Port mappings are from the external port to the internal container port
      port-mapping:
        80: "7860"
    # Port mappings are from the external port to the internal container port
    lan-config:
      443:
        ssl: true
        internal: 7860
    ui: true
    protocols:
      - tcp
      - http
dependencies:
  filebrowser:
    description: "Used to manage AI models."
    version: "^2.22.4"
    requirement:
      type: "required"
backup:
  create:
    type: docker
    image: compat
    system: true 
    entrypoint: compat 
    args:
      - duplicity
      - create
      - /mnt/backup
      - /mnt/files
    mounts:
      BACKUP: "/mnt/backup" 
      filebrowser: "/mnt/files"
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /mnt/backup
      - /mnt/files
    mounts:
      BACKUP: "/mnt/backup"
      filebrowser: "/mnt/files"
migrations:
  from:
    "*":
      type: script
      args: ["from"]
  to:
    "*":
      type: script
      args: ["to"]
